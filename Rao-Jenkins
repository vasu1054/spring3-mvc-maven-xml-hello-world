pipeline {
        agent any
        tools {
            maven 'Maven'
            jdk 'java'
        }
        stages {
            stage ('Initialize') {
                steps {
                    sh '''
                        echo "PATH = ${PATH}"
                        echo "M2_HOME = ${M2_HOME}"
                    '''
                }
            }
            stage ('Build') {
                steps {
                    sh 'mvn -Dmaven.test.failure.ignore=true install' 
                }
            }
            stage('sonarqube') {
                    environment {
                        scannerHome = tool 'sonarqube'
                    }
                    steps {
                        withSonarQubeEnv('sonarqube') {
                            sh "${scannerHome}/bin/sonar-scanner"
                        }
                    }
                }
                    stage('Artifactory') {
            steps {
                  script{
                    rtServer(
                        id: "ARTIFACTORY_SERVER",
                        url: 'http://3.145.102.238:8082/',
                        credentialsId: 'ARTIFACTORY_SERVER',
                        bypassProxy: true,
                    )
                    rtUpload(
                        serverId: 'ARTIFACTORY_SERVER',
                        spec:
                        '''{
                        "files": [{
                            "pattern": "./target/*.war",
                            "target": "test-repo-maven-remote/1.0.${BUILD_NUMBER}/",
                            "recursive": "false"
                        }]
                    }''',
                    failNoOp: true
                )
                rtPublishBuildInfo(
                    serverId: 'ARTIFACTORY_SERVER',
                    buildName: 'test-repo-maven-remote',
                    buildNumber: "${branch}",
                )

        }
                }
        }
        }
    }

